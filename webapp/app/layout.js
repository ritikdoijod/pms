import { Geist, Geist_Mono } from "next/font/google";
import { ThemeProvider } from "next-themes";
import { UserProvider } from "@/lib/contexts/user.context";
import { Toaster } from "@/components/ui/sonner";
import { api } from "@/configs/fc.config";

import "./globals.css";
import { cookies } from "next/headers";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({ children }) {
  const userId = (await cookies()).get("uid")?.value;
  let user;

  if (userId) {
    const { data, error } = await api.get(`/users/${userId}`);
    user = data.user;
  }

  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} font-sans antialiased`}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="light"
          enableSystem
          disableTransitionOnChange
        >
          <UserProvider initialUser={user}>
            {children}
            <Toaster richColors position="top-center" />
          </UserProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
